1: assign a4 nil [line 2]
2: assign ^0 a4 [line 2]
3: assign a3 ^0 [line 2]
4: assign ^1 a3 [line 2]
5: assign a2 ^1 [line 2]
6: assign ^2 a2 [line 2]
7: assign a1 ^2 [line 2]
8: assign ^3 a1 [line 2]
9: assign global_var 0 [line 4]
10: assign ^0 global_var IGNORE QUAD [line 4]
11: assign a1 2 [line 7]
12: assign ^0 a1 IGNORE QUAD [line 7]
13: jump 18 [line 10]
14: funcstart foo [line 10]
15: assign global_var 1 [line 11]
16: assign ^0 global_var IGNORE QUAD [line 11]
17: funcend foo [line 12]
18: param "
" [line 15]
19: param global_var [line 15]
20: call print [line 15]
21: getretval ^0 [line 15]
22: jump 31 [line 17]
23: funcstart foo1 [line 17]
24: assign global_var 2 [line 18]
25: assign ^0 global_var IGNORE QUAD [line 18]
26: param "
" [line 20]
27: param global_var [line 20]
28: call print [line 20]
29: getretval ^0 [line 20]
30: funcend foo1 [line 21]
31: param "
" [line 24]
32: param global_var [line 24]
33: call print [line 24]
34: getretval ^0 [line 24]
35: add ^0 global_var 1 [line 27]
36: assign global_var ^0 [line 27]
37: assign ^1 global_var IGNORE QUAD [line 27]
38: sub ^0 global_var 1 [line 28]
39: assign global_var ^0 [line 28]
40: assign ^1 global_var IGNORE QUAD [line 28]
41: mul ^0 global_var 2 [line 29]
42: assign global_var ^0 [line 29]
43: assign ^1 global_var IGNORE QUAD [line 29]
44: div ^0 global_var 2 [line 30]
45: assign global_var ^0 [line 30]
46: assign ^1 global_var IGNORE QUAD [line 30]
47: mod ^0 global_var global_var [line 31]
48: assign global_var ^0 [line 31]
49: assign ^1 global_var [line 31]
50: assign global_var 'true' [line 33]
51: assign ^0 global_var [line 33]
52: if_eq global_var 'true' 56 [line 35]
53: jump 54 [line 35]
54: assign ^0 'true' [line 35]
55: jump 57 [line 35]
56: assign ^0 'false' [line 35]
57: if_eq ^0 'true' 59 [line 35]
58: jump 62 [line 35]
59: assign global_var 'true' [line 36]
60: assign ^1 global_var [line 36]
61: jump 64 [line 38]
62: assign global_var 'false' [line 39]
63: assign ^0 global_var IGNORE QUAD [line 39]
64: assign i 0 [line 41]
65: assign ^0 i [line 41]
66: if_less i 10 68 [line 41]
67: jump 70 [line 41]
68: if_eq global_var 'true' 72 [line 41]
69: jump 70 [line 41]
70: if_greater i 20 72 [line 41]
71: jump 74 [line 41]
72: assign ^1 'true' [line 41]
73: jump 75 [line 41]
74: assign ^1 'false' [line 41]
75: if_eq ^1 'true' 80 [line 41]
76: jump 124 [line 41]
77: add i i 1 [line 41]
78: assign ^2 i [line 41]
79: jump 66 [line 41]
80: assign ^3 i [line 42]
81: add i i 1 [line 42]
82: if_noteq i 1 84 [line 44]
83: jump 86 [line 44]
84: assign ^0 'true' [line 44]
85: jump 87 [line 44]
86: assign ^0 'false' [line 44]
87: if_eq ^0 'true' 89 [line 44]
88: jump 91 [line 44]
89: call print [line 45]
90: getretval ^1 [line 45]
91: if_lesseq i 2 93 [line 47]
92: jump 95 [line 47]
93: assign ^0 'true' [line 47]
94: jump 96 [line 47]
95: assign ^0 'false' [line 47]
96: if_eq ^0 'true' 98 [line 47]
97: jump 106 [line 47]
98: assign i 9 [line 48]
99: assign ^1 i [line 48]
100: call print [line 49]
101: getretval ^0 [line 49]
102: assign ^0 i IGNORE QUAD [line 50]
103: sub i i 1 [line 50]
104: sub i i 1 [line 51]
105: assign ^0 i [line 51]
106: if_eq i 1 108 [line 54]
107: jump 110 [line 54]
108: assign ^0 'true' [line 54]
109: jump 111 [line 54]
110: assign ^0 'false' [line 54]
111: if_eq ^0 'true' 113 [line 54]
112: jump 114 [line 54]
113: jump 123 [line 57]
114: if_greatereq i 4 116 [line 57]
115: jump 118 [line 57]
116: assign ^0 'true' [line 57]
117: jump 119 [line 57]
118: assign ^0 'false' [line 57]
119: if_eq ^0 'true' 121 [line 57]
120: jump 122 [line 57]
121: jump 123 [line 59]
122: jump 77 [line 60]
123: jump 77 [line 61]
124: if_eq global_var 'true' 128 [line 63]
125: jump 126 [line 63]
126: assign ^0 'true' [line 63]
127: jump 129 [line 63]
128: assign ^0 'false' [line 63]
129: if_eq ^0 'true' 131 [line 63]
130: jump 142 [line 63]
131: if_eq global_var 'true' 135 [line 65]
132: jump 133 [line 65]
133: assign ^1 'true' [line 65]
134: jump 136 [line 65]
135: assign ^1 'false' [line 65]
136: assign j ^1 [line 65]
137: assign ^2 j [line 65]
138: if_eq ^2 'true' 140 [line 65]
139: jump 141 [line 65]
140: jump 142 [line 66]
141: jump 124 [line 67]
142: tablecreate ^0 [line 71]
143: assign object ^0 [line 71]
144: assign ^1 object IGNORE QUAD [line 71]
145: tablecreate ^0 [line 73]
146: tablesetelem ^0 0 1 [line 73]
147: tablesetelem ^0 1 2 [line 73]
148: tablesetelem ^0 2 "test" [line 73]
149: assign object ^0 [line 73]
150: assign ^1 object IGNORE QUAD [line 73]
151: tablecreate ^0 [line 75]
152: tablesetelem ^0 "a" 2 [line 75]
153: tablesetelem ^0 "b" 2 [line 75]
154: tablesetelem ^0 "c" 3 [line 75]
155: assign object ^0 [line 75]
156: assign ^1 object IGNORE QUAD [line 75]
157: tablegetelem ^0 object "f" [line 78]
158: param object [line 78]
159: call ^0 [line 78]
160: getretval ^1 [line 78]
161: tablesetelem object 0 2 [line 79]
162: tablegetelem ^0 object 0 [line 79]
163: tablesetelem object "test" 2 [line 80]
164: tablegetelem ^0 object "test" [line 80]
165: tablesetelem object "test" 2 [line 81]
166: tablegetelem ^0 object "test" [line 81]
167: jump 170 [line 83]
168: funcstart $0 [line 83]
169: funcend $0 [line 83]
170: assign object $0 [line 83]
171: assign ^0 object IGNORE QUAD [line 83]
172: jump 182 [line 85]
173: funcstart test [line 85]
174: jump 179 [line 86]
175: funcstart test1 [line 86]
176: return test [line 87]
177: jump 178 [line 87]
178: funcend test1 [line 88]
179: return test1 [line 89]
180: jump 181 [line 89]
181: funcend test [line 90]
182: call test [line 92]
183: getretval ^0 [line 92]
184: call test [line 93]
185: getretval ^0 [line 93]
186: call ^0 [line 93]
187: getretval ^1 [line 93]
188: call test [line 94]
189: getretval ^0 [line 94]
190: call ^0 [line 94]
191: getretval ^1 [line 94]
192: call ^1 [line 94]
193: getretval ^2 [line 94]
194: jump 205 [line 98]
195: funcstart test1 [line 98]
196: tablecreate ^0 [line 101]
197: tablecreate ^1 [line 101]
198: tablesetelem ^1 "y" ^0 [line 101]
199: tablecreate ^2 [line 102]
200: tablesetelem ^2 "a" 1 [line 102]
201: tablesetelem ^2 "x" ^1 [line 102]
202: return ^2 [line 102]
203: jump 204 [line 102]
204: funcend test1 [line 103]
205: call test1 [line 105]
206: getretval ^0 [line 105]
207: tablesetelem ^0 "a" 2 [line 105]
208: tablegetelem ^1 ^0 "a" [line 105]
209: call test1 [line 106]
210: getretval ^0 [line 106]
211: tablegetelem ^1 ^0 "test1f" [line 106]
212: call ^1 [line 106]
213: getretval ^2 [line 106]
214: call test1 [line 107]
215: getretval ^0 [line 107]
216: tablegetelem ^1 ^0 "test1f" [line 107]
217: param 2 [line 107]
218: param 1 [line 107]
219: call ^1 [line 107]
220: getretval ^2 [line 107]
221: call print [line 108]
222: getretval ^0 [line 108]
223: tablesetelem ^0 "a" 2 [line 108]
224: tablegetelem ^1 ^0 "a" [line 108]
225: tablegetelem ^0 a1 "a2" [line 110]
226: tablegetelem ^1 ^0 "a3" [line 110]
227: tablegetelem ^2 ^1 "a4" [line 110]
228: param "
" [line 110]
229: param ^2 [line 110]
230: call print [line 110]
231: getretval ^3 [line 110]